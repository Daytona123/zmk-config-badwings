/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
    quick_tap_ms = <0>;
};

/ { 

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
            combo_bspc {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp BSPC>;
        };
        
            combo_leftent {
            timeout-ms = <50>;
            key-positions = <11 13>;
            bindings = <&kp ENTER>;
        };
        
            combo_rightent {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp ENTER>;
        };
        
       
            combo_del {
            timeout-ms = <50>;
            key-positions = <5 6>;
            bindings = <&kp DEL>;
        };
                
        
            combo_undsc {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp MINUS>;
        };
        
        
            combo_less {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp LT>;
        };

                
            combo_more {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp GT>;
        };
        
        
            combo_quote {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp SQT>;
        };


            combo_minus {
            timeout-ms = <50>;
            key-positions = <25 26>;
            bindings = <&kp UNDER>;
        };


            combo_tab {
            timeout-ms = <50>;
            key-positions = <11 21>;
            bindings = <&kp TAB>;
        };
      

            combo_left {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&mo 2>;
        };


            combo_right {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&mo 1>;
        };
	
	   combo_workspaceleft {
	   timeout-ms = <50>;
	   key-positions = <1 11>;
	   bindings = <&kp RG(RC(LEFT))>;
	};
	
	  combo_workspaceright {
	  timeout-ms = <50>;
	  key-positions = <3 13>;
	  bindings = <&kp RG(RC(RIGHT))>;
	};
	
	 combo_alttab {
	  timeout-ms = <20>;
	  key-positions = <2 12>;
	  bindings = <&kp LA(TAB)>;
	};
	
	combo_newalt {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp TAB>;
        };

	combo_boot {
	    timeout-ms = <50>;
	    key-positions = <0 4 5 9>;
	    bindings = <&bootloader>;
	};

combo_lclck {
     timeout-ms = <50>;
     key-positions = <4 14>;
     bindings= <&mkp LCLK>;
     };

combo_rclck {
     timeout-ms = <50>;
     key-positions = <14 24>;
     bindings= <&mkp RCLK>;
     };
    };

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R &kp T 				 &kp Y &kp U &kp I &kp O &kp P 
		&mt LSHIFT A &kp S &kp D &kp F &kp G 			         &kp H &kp J &kp K &kp L &mt LSHIFT SEMI
		&mt LCTL Z &mt LALT X &kp C &kp V &kp B	                 &kp N &kp M &kp COMMA &mt LALT DOT &mt LCTL SLASH
          			     &trans &mt LGUI TAB &lt 1 SPC  		 &lt 2 BSPC &mt LSHIFT BSPC &trans 
		>;
		};

       		left_layer {
		bindings = <
		&kp EXCL  &kp AT  &kp LBRC  &kp RBRC  &kp PIPE    	&kp GRAVE &kp TILDE &none &none &kp BSLH
		&kp HASH  &kp DLLR  &kp LPAR  &kp RPAR  &none 		&kp PLUS &kp MINUS  &kp BSLH  &kp STAR  &kp SQT 
		&kp PRCNT  &kp CARET  &kp LBKT &kp RBKT &none 		&kp AMPS &kp EQUAL &none &none &none
					    	&trans &mo 1  &trans  	&kp RGUI &mo 2 &trans
		>;
		};
		
		right_layer {
		bindings = <
		&kp HOME  &kp N1 &kp N2  &kp N3  &kp END    		&kp K_MUTE  &none &none &none &none 
		&kp PG_UP  &kp N4  &kp N5 &kp N6 &kp DOT 		&kp K_VOL_UP &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT
		&kp PG_DN  &kp N7 &kp N8 &kp N9   &kp N0    		&kp K_VOL_DN &none &none &none  &none
					    &trans &kp SPC &mo 3  		&kp SPC  &mo 2 &trans
		>;
		};	
		
		tri_layer {
		bindings = <
		&kp F1 &kp F2 &kp F3 &kp F4 &none 			&none &bt BT_SEL 0 &bt BT_CLR &bt BT_PRV &bt BT_NXT
		&kp F5 &kp F6 &kp F7 &kp F8 &none  			&none &kp PG_UP  &kp K_VOL_UP &none &none 
		&kp F9  &kp F10 &kp F11 &kp F12 &none   		&none &kp PG_DN  &kp K_VOL_DN  &none &ext_power EP_TOG  
					&trans &trans &trans  		&trans &trans &trans
		>;
		};	
        
	};
};
